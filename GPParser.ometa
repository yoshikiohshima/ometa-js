ometa GPParser {
  anyChar =
    char:c ?{c != ";" && c != ")" && c != "}" && c > " "}	-> c,
  sQuote = char:c ?{c == "'"},
  number = 
    < noNL '-'? digit+ ('.' digit+)? >:ds
      -> ["CONST", parseFloat(ds)],
  string =
    noNL sQuote ((&(sQuote sQuote) char char -> "'") | ~sQuote char)*:cs sQuote
      -> ["CONST", cs.join("")],
  symbol =
    < anyChar+ >:c
      -> ["SYMBOL", c],
  comment =
    '/' '/' (~nl anything)* &(nl | end),
  fComment =
    (space | comment (nl | end))*,
  tComment =
    noNL comment,
  reporter = 
    (fComment value:v tComment? -> v)+:rs spaces -> ["LIST"].concat(rs),
  cmdNoNL =
    (noNL value:v tComment? -> v)+:rs -> ["LIST"].concat(rs),
  cmdList =
    noNL '{' (nl | tComment nl)? (fComment cmdNoNL:c noNL tComment? (nl | noNL &'}') -> c)+:cs noNL '}' tComment? -> ["SEQ"].concat(cs),
  value =
    number | string | (noNL '(' reporter:c spaces ')' -> c) | cmdList | symbol,
  nl = char:c ?{c == "\n" || c == "\r"},
  noNL =
    (char:c ?{c != "\n" && c != "\r" && c.charCodeAt(0) <= " ".charCodeAt(0)})*,
  definition =
    cmdNoNL:c spaces tComment? spaces -> c,
  file = 
    (fComment definition:d -> d)*:ds fComment -> ds
};
